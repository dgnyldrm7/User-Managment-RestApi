// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using User_Managment_RestApi.Models.ConnectContext;

#nullable disable

namespace User_Managment_RestApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240501133215_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("User_Managment_RestApi.Models.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2024, 5, 1, 16, 32, 15, 9, DateTimeKind.Local).AddTicks(728),
                            Description = "Admin role",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2024, 5, 1, 16, 32, 15, 9, DateTimeKind.Local).AddTicks(740),
                            Description = "Regular user role",
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("User_Managment_RestApi.Models.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmPassword = "password123",
                            CreatedTime = new DateTime(2024, 5, 1, 16, 32, 15, 9, DateTimeKind.Local).AddTicks(834),
                            Email = "john@example.com",
                            LastName = "Doe",
                            Name = "John",
                            Password = "password123",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConfirmPassword = "password456",
                            CreatedTime = new DateTime(2024, 5, 1, 16, 32, 15, 9, DateTimeKind.Local).AddTicks(837),
                            Email = "jane@example.com",
                            LastName = "Doe",
                            Name = "Jane",
                            Password = "password456",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("User_Managment_RestApi.Models.Entity.User", b =>
                {
                    b.HasOne("User_Managment_RestApi.Models.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("User_Managment_RestApi.Models.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
