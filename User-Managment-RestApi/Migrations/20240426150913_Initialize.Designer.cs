// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using User_Managment_RestApi.ConnextContext;

#nullable disable

namespace User_Managment_RestApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240426150913_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("User_Managment_RestApi.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2024, 4, 26, 18, 9, 12, 588, DateTimeKind.Local).AddTicks(4086),
                            Description = "This is admin!",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2024, 4, 26, 18, 9, 12, 588, DateTimeKind.Local).AddTicks(4098),
                            Description = "This is writer!",
                            RoleName = "Writer"
                        });
                });

            modelBuilder.Entity("User_Managment_RestApi.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmPassword = "123456",
                            CreatedTime = new DateTime(2024, 4, 26, 18, 9, 12, 588, DateTimeKind.Local).AddTicks(4309),
                            Email = "test1@gmail.com",
                            LastName = "Test1",
                            Name = "Test1",
                            Password = "123456",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConfirmPassword = "123456*",
                            CreatedTime = new DateTime(2024, 4, 26, 18, 9, 12, 588, DateTimeKind.Local).AddTicks(4312),
                            Email = "test2@gmail.com",
                            LastName = "Test2",
                            Name = "Test2",
                            Password = "123456*",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            ConfirmPassword = "123",
                            CreatedTime = new DateTime(2024, 4, 26, 18, 9, 12, 588, DateTimeKind.Local).AddTicks(4315),
                            Email = "test3@gmail.com",
                            LastName = "Test3",
                            Name = "Test3",
                            Password = "123",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            ConfirmPassword = "12",
                            CreatedTime = new DateTime(2024, 4, 26, 18, 9, 12, 588, DateTimeKind.Local).AddTicks(4317),
                            Email = "test4@gmail.com",
                            LastName = "Test4",
                            Name = "Test4",
                            Password = "12",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("User_Managment_RestApi.Entity.User", b =>
                {
                    b.HasOne("User_Managment_RestApi.Entity.Role", "_roles")
                        .WithMany("_users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_roles");
                });

            modelBuilder.Entity("User_Managment_RestApi.Entity.Role", b =>
                {
                    b.Navigation("_users");
                });
#pragma warning restore 612, 618
        }
    }
}
